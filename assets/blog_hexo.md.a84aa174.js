import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.4cf23e62.js";const u=JSON.parse('{"title":"使用 Hexo 搭建一个博客","description":"","frontmatter":{},"headers":[],"relativePath":"blog/hexo.md","filePath":"blog/hexo.md","lastUpdated":1683647484000}'),p={name:"blog/hexo.md"},o=l(`<h1 id="使用-hexo-搭建一个博客" tabindex="-1">使用 Hexo 搭建一个博客 <a class="header-anchor" href="#使用-hexo-搭建一个博客" aria-label="Permalink to &quot;使用 Hexo 搭建一个博客&quot;">​</a></h1><h2 id="安装node-js" tabindex="-1">安装Node.js <a class="header-anchor" href="#安装node-js" aria-label="Permalink to &quot;安装Node.js&quot;">​</a></h2><p><a href="http://nodejs.cn/download/" target="_blank" rel="noreferrer">下载地址</a></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki slack-ochin"><code><span class="line"><span style="color:#357B42;font-style:italic;">#  解压</span></span>
<span class="line"><span style="color:#7EB233;">tar</span><span style="color:#002339;"> </span><span style="color:#174781;">-xvf</span><span style="color:#002339;">   </span><span style="color:#A44185;">node-v6.10.0-linux-x64.tar.xz</span><span style="color:#002339;">   </span></span>
<span class="line"><span style="color:#7EB233;">mv</span><span style="color:#002339;"> </span><span style="color:#A44185;">node-v6.10.0-linux-x64</span><span style="color:#002339;">  </span><span style="color:#A44185;">nodejs</span><span style="color:#002339;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#357B42;font-style:italic;">#  软连接</span></span>
<span class="line"><span style="color:#7EB233;">ln</span><span style="color:#002339;"> </span><span style="color:#174781;">-s</span><span style="color:#002339;"> </span><span style="color:#A44185;">/mydata/nodejs/bin/npm</span><span style="color:#002339;"> </span><span style="color:#A44185;">/usr/local/bin/</span><span style="color:#002339;"> </span></span>
<span class="line"><span style="color:#7EB233;">ln</span><span style="color:#002339;"> </span><span style="color:#174781;">-s</span><span style="color:#002339;"> </span><span style="color:#A44185;">/mydata/nodejs/bin/node</span><span style="color:#002339;"> </span><span style="color:#A44185;">/usr/local/bin/</span></span></code></pre></div><h2 id="安装hexo" tabindex="-1">安装Hexo <a class="header-anchor" href="#安装hexo" aria-label="Permalink to &quot;安装Hexo&quot;">​</a></h2><blockquote><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noreferrer">Hexo</a></p></blockquote><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki slack-ochin"><code><span class="line"><span style="color:#357B42;font-style:italic;">#  安装客户端</span></span>
<span class="line"><span style="color:#7EB233;">npm</span><span style="color:#002339;"> </span><span style="color:#A44185;">install</span><span style="color:#002339;"> </span><span style="color:#A44185;">hexo-cli</span><span style="color:#002339;"> </span><span style="color:#174781;">-g</span></span>
<span class="line"><span style="color:#357B42;font-style:italic;">#  软连接</span></span>
<span class="line"><span style="color:#7EB233;">ln</span><span style="color:#002339;"> </span><span style="color:#174781;">-s</span><span style="color:#002339;"> </span><span style="color:#A44185;">/mydata/nodejs/bin/hexo</span><span style="color:#002339;"> </span><span style="color:#A44185;">/usr/local/bin/hexo</span></span>
<span class="line"><span style="color:#357B42;font-style:italic;">#  检查安装</span></span>
<span class="line"><span style="color:#7EB233;">hexo</span></span>
<span class="line"><span style="color:#357B42;font-style:italic;">#  创建你的博客目录</span></span>
<span class="line"><span style="color:#7EB233;">mkdir</span><span style="color:#002339;"> </span><span style="color:#A44185;">blog</span></span>
<span class="line"><span style="color:#1AB394;">cd</span><span style="color:#002339;"> </span><span style="color:#A44185;">blog</span></span>
<span class="line"><span style="color:#357B42;font-style:italic;">#  初始化博客</span></span>
<span class="line"><span style="color:#7EB233;">hexo</span><span style="color:#002339;"> </span><span style="color:#A44185;">init</span></span>
<span class="line"><span style="color:#7EB233;">npm</span><span style="color:#002339;"> </span><span style="color:#A44185;">install</span></span>
<span class="line"><span style="color:#357B42;font-style:italic;">#  启动</span></span>
<span class="line"><span style="color:#7EB233;">hexo</span><span style="color:#002339;"> </span><span style="color:#A44185;">s</span></span>
<span class="line"></span>
<span class="line"><span style="color:#357B42;font-style:italic;"># 修改启动端口</span></span>
<span class="line"><span style="color:#7EB233;">node_modules</span><span style="color:#002339;"> </span><span style="color:#174781;">\\ </span><span style="color:#A44185;">hexo-server</span><span style="color:#174781;">\\ </span><span style="color:#A44185;">index.js</span></span></code></pre></div><h2 id="后台运行" tabindex="-1">后台运行 <a class="header-anchor" href="#后台运行" aria-label="Permalink to &quot;后台运行&quot;">​</a></h2><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki slack-ochin"><code><span class="line"><span style="color:#7EB233;">npm</span><span style="color:#002339;"> </span><span style="color:#A44185;">install</span><span style="color:#002339;"> </span><span style="color:#174781;">-g</span><span style="color:#002339;"> </span><span style="color:#A44185;">pm2</span></span>
<span class="line"><span style="color:#7EB233;">ln</span><span style="color:#002339;"> </span><span style="color:#174781;">-s</span><span style="color:#002339;"> </span><span style="color:#A44185;">/mydata/nodejs/bin/pm2</span><span style="color:#002339;"> </span><span style="color:#A44185;">/usr/bin/pm2</span></span></code></pre></div><p>新建 <code>hexo_run.js</code> 运行脚本</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki slack-ochin"><code><span class="line"><span style="color:#0991B6;">const</span><span style="color:#002339;"> { </span><span style="color:#2F86D2;">exec</span><span style="color:#002339;"> } </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#7EB233;">require</span><span style="color:#002339;">(</span><span style="color:#A44185;">&#39;child_process&#39;</span><span style="color:#002339;">)</span></span>
<span class="line"><span style="color:#7EB233;">exec</span><span style="color:#002339;">(</span><span style="color:#A44185;">&#39;hexo server&#39;</span><span style="color:#002339;">,(</span><span style="color:#B1108E;">error</span><span style="color:#002339;">, </span><span style="color:#B1108E;">stdout</span><span style="color:#002339;">, </span><span style="color:#B1108E;">stderr</span><span style="color:#002339;">) </span><span style="color:#0991B6;">=&gt;</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">        </span><span style="color:#7B30D0;">if</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">error</span><span style="color:#002339;">){</span></span>
<span class="line"><span style="color:#002339;">                </span><span style="color:#2F86D2;">console</span><span style="color:#002339;">.</span><span style="color:#7EB233;">log</span><span style="color:#002339;">(</span><span style="color:#A44185;">&#39;exec error: \${error}&#39;</span><span style="color:#002339;">)</span></span>
<span class="line"><span style="color:#002339;">                </span><span style="color:#7B30D0;">return</span></span>
<span class="line"><span style="color:#002339;">        }</span></span>
<span class="line"><span style="color:#002339;">        </span><span style="color:#2F86D2;">console</span><span style="color:#002339;">.</span><span style="color:#7EB233;">log</span><span style="color:#002339;">(</span><span style="color:#A44185;">&#39;stdout: \${stdout}&#39;</span><span style="color:#002339;">);</span></span>
<span class="line"><span style="color:#002339;">        </span><span style="color:#2F86D2;">console</span><span style="color:#002339;">.</span><span style="color:#7EB233;">log</span><span style="color:#002339;">(</span><span style="color:#A44185;">&#39;stderr: \${stderr}&#39;</span><span style="color:#002339;">);</span></span>
<span class="line"><span style="color:#002339;">})</span></span></code></pre></div><p>启动</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki slack-ochin"><code><span class="line"><span style="color:#7EB233;">pm2</span><span style="color:#002339;"> </span><span style="color:#A44185;">start</span><span style="color:#002339;"> </span><span style="color:#A44185;">hexo_run.js</span></span></code></pre></div><h2 id="pm2命令" tabindex="-1">PM2命令 <a class="header-anchor" href="#pm2命令" aria-label="Permalink to &quot;PM2命令&quot;">​</a></h2><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki slack-ochin"><code><span class="line"><span style="color:#7EB233;">pm2</span><span style="color:#002339;"> </span><span style="color:#A44185;">start</span><span style="color:#002339;"> </span><span style="color:#A44185;">server.js</span><span style="color:#002339;"> </span><span style="color:#357B42;font-style:italic;"># 启动server.js进程</span></span>
<span class="line"><span style="color:#7EB233;">pm2</span><span style="color:#002339;"> </span><span style="color:#A44185;">start</span><span style="color:#002339;"> </span><span style="color:#A44185;">server.js</span><span style="color:#002339;"> </span><span style="color:#174781;">-i</span><span style="color:#002339;"> </span><span style="color:#174781;">4</span><span style="color:#002339;"> </span><span style="color:#357B42;font-style:italic;"># 启动4个server.js进程</span></span>
<span class="line"><span style="color:#7EB233;">pm2</span><span style="color:#002339;"> </span><span style="color:#A44185;">restart</span><span style="color:#002339;"> </span><span style="color:#A44185;">server.js</span><span style="color:#002339;"> </span><span style="color:#357B42;font-style:italic;"># 重启server.js进程</span></span>
<span class="line"><span style="color:#7EB233;">pm2</span><span style="color:#002339;"> </span><span style="color:#A44185;">stop</span><span style="color:#002339;"> </span><span style="color:#A44185;">all</span><span style="color:#002339;"> </span><span style="color:#357B42;font-style:italic;">#  停止所有进程</span></span>
<span class="line"><span style="color:#7EB233;">pm2</span><span style="color:#002339;"> </span><span style="color:#A44185;">stop</span><span style="color:#002339;"> </span><span style="color:#A44185;">server.js</span><span style="color:#002339;"> </span><span style="color:#357B42;font-style:italic;"># 停止server.js进程</span></span>
<span class="line"><span style="color:#7EB233;">pm2</span><span style="color:#002339;"> </span><span style="color:#A44185;">stop</span><span style="color:#002339;"> </span><span style="color:#174781;">0</span><span style="color:#002339;"> </span><span style="color:#357B42;font-style:italic;"># 停止编号为0的进程</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#357B42;font-style:italic;"># 创建app.json，内容如下</span></span>
<span class="line"><span style="color:#002339;">{</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#7EB233;">&quot;apps&quot;</span><span style="color:#002339;"> </span><span style="color:#A44185;">:</span><span style="color:#002339;"> [{</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#7EB233;">&quot;script&quot;</span><span style="color:#002339;">    </span><span style="color:#A44185;">:</span><span style="color:#002339;"> </span><span style="color:#A44185;">&quot;server.js&quot;,</span><span style="color:#002339;">  </span><span style="color:#357B42;font-style:italic;"># 进程名</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#7EB233;">&quot;instances&quot;</span><span style="color:#002339;"> </span><span style="color:#A44185;">:</span><span style="color:#002339;"> </span><span style="color:#A44185;">&quot;max&quot;,</span><span style="color:#002339;">   </span><span style="color:#357B42;font-style:italic;"># 开启进程数，可为数值，也可为max。与服务器cpu核数相关</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#7EB233;">&quot;exec_mode&quot;</span><span style="color:#002339;"> </span><span style="color:#A44185;">:</span><span style="color:#002339;"> </span><span style="color:#A44185;">&quot;cluster&quot;</span><span style="color:#002339;"> </span><span style="color:#357B42;font-style:italic;">#  可选：fork(服务器单核推荐) cluster(多核推荐)</span></span>
<span class="line"><span style="color:#002339;">  }]</span></span>
<span class="line"><span style="color:#002339;">}</span></span>
<span class="line"><span style="color:#7EB233;">pm2</span><span style="color:#002339;"> </span><span style="color:#A44185;">start</span><span style="color:#002339;"> </span><span style="color:#A44185;">app.json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7EB233;">pm2</span><span style="color:#002339;"> </span><span style="color:#A44185;">list</span><span style="color:#002339;"> </span><span style="color:#357B42;font-style:italic;"># 查看当前正在运行的进程</span></span>
<span class="line"><span style="color:#7EB233;">pm2</span><span style="color:#002339;"> </span><span style="color:#A44185;">show</span><span style="color:#002339;"> </span><span style="color:#174781;">0</span><span style="color:#002339;"> </span><span style="color:#357B42;font-style:italic;"># 查看执行编号为0的进程</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7EB233;">pm2</span><span style="color:#002339;"> </span><span style="color:#A44185;">monit</span><span style="color:#002339;"> </span><span style="color:#357B42;font-style:italic;"># 监控当前所有的进程</span></span>
<span class="line"><span style="color:#7EB233;">pm2</span><span style="color:#002339;"> </span><span style="color:#A44185;">monit</span><span style="color:#002339;"> </span><span style="color:#174781;">0</span><span style="color:#002339;"> </span><span style="color:#357B42;font-style:italic;"># 监控批评行编号为0的进程</span></span>
<span class="line"><span style="color:#7EB233;">pm2</span><span style="color:#002339;"> </span><span style="color:#A44185;">monit</span><span style="color:#002339;"> </span><span style="color:#A44185;">server.js</span><span style="color:#002339;"> </span><span style="color:#357B42;font-style:italic;"># 监控名称为server.js的进程</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7EB233;">pm2</span><span style="color:#002339;"> </span><span style="color:#A44185;">logs</span><span style="color:#002339;"> </span><span style="color:#357B42;font-style:italic;"># 显示所有日志</span></span>
<span class="line"><span style="color:#7EB233;">pm2</span><span style="color:#002339;"> </span><span style="color:#A44185;">logs</span><span style="color:#002339;"> </span><span style="color:#174781;">0</span><span style="color:#002339;"> </span><span style="color:#357B42;font-style:italic;"># 显示执行编号为0的日志</span></span>
<span class="line"><span style="color:#7EB233;">pm2</span><span style="color:#002339;"> </span><span style="color:#A44185;">logs</span><span style="color:#002339;"> </span><span style="color:#A44185;">server.js</span><span style="color:#002339;"> </span><span style="color:#357B42;font-style:italic;"># 显示名称为server.js的进程</span></span>
<span class="line"><span style="color:#7EB233;">pm2</span><span style="color:#002339;"> </span><span style="color:#A44185;">flush</span><span style="color:#002339;">  </span><span style="color:#357B42;font-style:italic;"># 清洗所有的数据[注：我没有试出来效果]</span></span></code></pre></div>`,15),e=[o];function t(c,r,y,i,d,h){return n(),a("div",null,e)}const A=s(p,[["render",t]]);export{u as __pageData,A as default};
